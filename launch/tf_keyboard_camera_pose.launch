<launch>
  <!-- This launch file is made by Dave -->

  <!-- Manual calibration of gantry to camera -->
  <node pkg="keyboard" type="keyboard" name="keyboard_camera_pose" />
  <node pkg="tf_keyboard_cal" type="tf_keyboard" name="tf_keyboard_camera_pose" output="screen">
    <rosparam command="load" file="$(find tf_keyboard_cal)/config/tf/tf_keyboard_camera_pose.yaml"/>
  </node>

  <!-- Manual calibration of product hack offset -->
  <node pkg="keyboard" type="keyboard" name="keyboard_hack" />
  <node pkg="tf_keyboard_cal" type="tf_keyboard" name="tf_keyboard_hack" output="screen">
    <rosparam command="load" file="$(find tf_keyboard_cal)/config/tf/tf_keyboard_hack_offset.yaml"/>
  </node>

  <arg name="camera" default="camera" />
  <arg name="tf_prefix" default="" />

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
    args="0 -0.02  0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1"
    args="0 -0.045 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame 100"/>
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />

</launch>
